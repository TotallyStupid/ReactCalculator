{"ast":null,"code":"import _classCallCheck from \"/Users/Matt/Documents/Apps/ReactCalculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matt/Documents/Apps/ReactCalculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matt/Documents/Apps/ReactCalculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matt/Documents/Apps/ReactCalculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matt/Documents/Apps/ReactCalculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matt/Documents/Apps/ReactCalculator/src/Containers/Calculator/Calculator.js\";\nimport React, { Component } from 'react';\nimport KeyPad from '../../Components/KeyPad/KeyPad';\nimport ViewPort from '../../Components/ViewPort/ViewPort';\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calculator, _Component);\n\n  function Calculator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calculator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      viewPortContent: ''\n    };\n\n    _this.keyClickedHandler = function (keyValue) {\n      if (keyValue === '=') {\n        answer = eval(_this.state.viewPortContent);\n        console.log(answer);\n      } else {\n        _this.setState({\n          viewPortContent: _this.state.viewPortContent + keyValue\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(ViewPort, {\n        content: this.state.viewPortContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(KeyPad, {\n        clicked: this.keyClickedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calculator;\n}(Component);\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/Matt/Documents/Apps/ReactCalculator/src/Containers/Calculator/Calculator.js"],"names":["React","Component","KeyPad","ViewPort","Calculator","state","viewPortContent","keyClickedHandler","keyValue","answer","eval","console","log","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,eAAe,EAAE;AADb,K;;UAIRC,iB,GAAoB,UAACC,QAAD,EAAc;AAC9B,UAAGA,QAAQ,KAAK,GAAhB,EAAqB;AACjBC,QAAAA,MAAM,GAAGC,IAAI,CAAC,MAAKL,KAAL,CAAWC,eAAZ,CAAb;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACH,OAHD,MAGO;AACH,cAAKI,QAAL,CAAc;AAACP,UAAAA,eAAe,EAAE,MAAKD,KAAL,CAAWC,eAAX,GAA6BE;AAA/C,SAAd;AACH;AACJ,K;;;;;;;6BAES;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EArBoBN,S;;AAwBzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport KeyPad from '../../Components/KeyPad/KeyPad';\nimport ViewPort from '../../Components/ViewPort/ViewPort';\n\nclass Calculator extends Component {\n    state = {\n        viewPortContent: ''\n    }\n\n    keyClickedHandler = (keyValue) => {\n        if(keyValue === '=') {\n            answer = eval(this.state.viewPortContent);\n            console.log(answer);\n        } else {\n            this.setState({viewPortContent: this.state.viewPortContent + keyValue});\n        }\n    }\n    \n    render () {\n        return (\n            <div>\n                <ViewPort content={this.state.viewPortContent} />\n                <KeyPad clicked={this.keyClickedHandler} />\n            </div>\n        )\n    }\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}